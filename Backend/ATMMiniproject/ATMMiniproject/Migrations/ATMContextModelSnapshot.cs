// <auto-generated />
using System;
using ATM_MiniProject.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ATMMiniproject.Migrations
{
    [DbContext(typeof(ATMContext))]
    partial class ATMContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.31")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ATM_MiniProject.Context.Account", b =>
                {
                    b.Property<int>("AcctId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AcctId"), 1L, 1);

                    b.Property<int>("Balance")
                        .HasColumnType("int");

                    b.HasKey("AcctId");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            AcctId = 123456,
                            Balance = 1000
                        });
                });

            modelBuilder.Entity("ATM_MiniProject.Context.DebitCardDetails", b =>
                {
                    b.Property<int>("CardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CardId"), 1L, 1);

                    b.Property<int>("AcctId")
                        .HasColumnType("int");

                    b.Property<byte[]>("HashSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PinHashed")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("CardId");

                    b.HasIndex("AcctId")
                        .IsUnique();

                    b.ToTable("DebitCardDetails");

                    b.HasData(
                        new
                        {
                            CardId = 654321,
                            AcctId = 123456,
                            HashSalt = new byte[] { 156, 230, 82, 72, 34, 139, 65, 237, 23, 91, 0, 136, 31, 44, 37, 167, 80, 154, 107, 235, 83, 183, 214, 172, 111, 153, 89, 27, 168, 187, 21, 28, 48, 176, 46, 134, 229, 149, 120, 167, 85, 181, 122, 76, 121, 97, 140, 135, 90, 79, 170, 16, 28, 188, 90, 126, 19, 154, 180, 127, 0, 98, 202, 176, 100, 146, 28, 198, 192, 79, 1, 11, 243, 86, 227, 9, 186, 19, 56, 222, 80, 200, 136, 35, 204, 206, 114, 53, 185, 2, 183, 73, 72, 221, 31, 91, 118, 62, 18, 223, 141, 207, 209, 7, 251, 103, 194, 49, 137, 114, 47, 141, 201, 44, 89, 194, 90, 143, 197, 73, 9, 185, 58, 8, 36, 86, 119, 49 },
                            PinHashed = new byte[] { 20, 239, 47, 192, 24, 39, 29, 214, 158, 146, 198, 251, 63, 84, 11, 114, 102, 8, 175, 79, 36, 88, 107, 221, 236, 136, 204, 25, 155, 0, 171, 239, 55, 42, 116, 122, 245, 210, 119, 240, 192, 210, 100, 249, 106, 36, 114, 129, 171, 247, 180, 155, 33, 123, 110, 104, 135, 117, 35, 21, 67, 242, 254, 177 }
                        });
                });

            modelBuilder.Entity("ATM_MiniProject.Models.ATMTransaction", b =>
                {
                    b.Property<int>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransactionId"), 1L, 1);

                    b.Property<int>("AcctId")
                        .HasColumnType("int");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("Balance")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("TransactionType")
                        .HasColumnType("int");

                    b.HasKey("TransactionId");

                    b.HasIndex("AcctId");

                    b.ToTable("ATMTransactions");
                });

            modelBuilder.Entity("ATM_MiniProject.Context.DebitCardDetails", b =>
                {
                    b.HasOne("ATM_MiniProject.Context.Account", "Account")
                        .WithOne("DebitCardDetails")
                        .HasForeignKey("ATM_MiniProject.Context.DebitCardDetails", "AcctId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("ATM_MiniProject.Models.ATMTransaction", b =>
                {
                    b.HasOne("ATM_MiniProject.Context.Account", null)
                        .WithMany("Transactions")
                        .HasForeignKey("AcctId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ATM_MiniProject.Context.Account", b =>
                {
                    b.Navigation("DebitCardDetails")
                        .IsRequired();

                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
